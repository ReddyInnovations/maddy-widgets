{"version":3,"file":"660.bundle.d3f2ee628abd594752f3.js","mappings":"sLA0BA,MAAMA,EAAgCC,IAOhC,IAPiC,UACrCC,EAAS,aACTC,EAAY,QACZC,EAAO,SACPC,EAAQ,YACRC,EAAW,MACXC,GACDN,EACC,MACMO,EAAYA,IAAMF,GAAY,GAEpC,OACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAe,CAACH,MAAOA,EAAMI,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,UACHC,EAAAA,EAAAA,KAAA,OAAKE,IAAKV,EAASW,IAAI,YAEzBH,EAAAA,EAAAA,KAACI,EAAAA,GAAG,CAACX,SAAUA,EAAUE,MAAOA,EAAMI,UACpCC,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAAAN,SACLT,EAAUgB,KAAKC,IACdP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,KAAI,CAACC,GAAIF,EAAKG,IAAKC,QAASf,EAAUG,SACpCQ,EAAKK,SAFDL,EAAKG,WAQnBnB,IACCS,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CAACF,QAASpB,EAAcI,MAAOA,EAAMI,SAAC,UAIjDT,EAAUwB,OAAS,IAClBd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAACJ,QAzBCK,IAAMtB,GAAaD,GAyBCE,MAAOA,EAAMI,SAC3CN,GAAWO,EAAAA,EAAAA,KAACiB,EAAAA,IAAO,KAAMjB,EAAAA,EAAAA,KAACkB,EAAAA,IAAM,QAGrB,EAErBC,EAvCK/B,EAyCN,UAAsB,IAAA+B,EAAAC,aAzChBhC,EAyCgB,UAAAgC,aAAAD,EAAA,S,uGClEf,MAAMrB,EAAkBuB,IAAAA,OAAaC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAbH,CAAa,0NAKtBhC,IAAA,IAAC,MAAEM,GAAON,EAAA,OAAKM,GAAO8B,iBAAmB,MAAM,IAUxDxB,EAAOoB,IAAAA,IAAUC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVH,CAAU,kCAOjBjB,EAAMiB,IAAAA,IAAUC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVH,CAAU,wRAQdK,IAAA,IAAC,SAAEjC,GAAUiC,EAAA,OAAMjC,EAAW,OAAS,MAAM,IAMpCkC,IAAA,IAAC,MAAEhC,GAAOgC,EAAA,OAAKhC,GAAO8B,iBAAmB,MAAM,IAQ1DpB,EAAUgB,IAAAA,GAASC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAATH,CAAS,uOAgBjBO,IAAA,IAAC,MAAEjC,GAAOiC,EAAA,OAAKjC,GAAOkC,cAAgB,MAAM,IAI1CC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,GAAOoC,YAAc,SAAS,IAMjDlB,EAAYQ,IAAAA,OAAaC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAbH,CAAa,6GAI3BW,IAAA,IAAC,MAAErC,GAAOqC,EAAA,OAAKrC,GAAOsC,gBAAkB,SAAS,IAQ/ClB,EAAaM,IAAAA,OAAaC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAbH,CAAa,gHAK5Ba,IAAA,IAAC,MAAEvC,GAAOuC,EAAA,OAAKvC,GAAOkC,cAAgB,MAAM,G,iBCrFrDM,EAAOC,QAAU,EAAjB,K","sources":["webpack://maddy-widgets/./src/components/Header.tsx","webpack://maddy-widgets/./src/styles/Header.styles.ts","webpack://maddy-widgets/./node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from 'react';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  HeaderContainer,\r\n  Logo,\r\n  Nav,\r\n  NavList,\r\n  LoginLink,\r\n  MenuToggle,\r\n} from '@src/styles/Header.styles';\r\n\r\ninterface HeaderProps {\r\n  menuLinks: { url: string; label: string }[]; // Menu links are required\r\n  onLoginClick?: () => void; // Login click handler is optional\r\n  logoSrc: string; // Logo source is required\r\n  menuOpen: boolean; // Menu state is required\r\n  setMenuOpen: React.Dispatch<React.SetStateAction<boolean>>; // Set menu state is required\r\n  theme?: {\r\n    primaryColor?: string;\r\n    secondaryColor?: string;\r\n    backgroundColor?: string;\r\n    hoverColor?: string;\r\n  }; // Theme customization\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  menuLinks,\r\n  onLoginClick,\r\n  logoSrc,\r\n  menuOpen,\r\n  setMenuOpen,\r\n  theme,\r\n}) => {\r\n  const toggleMenu = () => setMenuOpen(!menuOpen);\r\n  const closeMenu = () => setMenuOpen(false);\r\n\r\n  return (\r\n    <HeaderContainer theme={theme}>\r\n      <Logo>\r\n        <img src={logoSrc} alt=\"Logo\" />\r\n      </Logo>\r\n      <Nav menuOpen={menuOpen} theme={theme}>\r\n        <NavList>\r\n          {menuLinks.map((link) => (\r\n            <li key={link.url}>\r\n              <Link to={link.url} onClick={closeMenu}>\r\n                {link.label}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </NavList>\r\n      </Nav>\r\n      {onLoginClick && (\r\n        <LoginLink onClick={onLoginClick} theme={theme}>\r\n          Login\r\n        </LoginLink>\r\n      )}\r\n      {menuLinks.length > 0 && (\r\n        <MenuToggle onClick={toggleMenu} theme={theme}>\r\n          {menuOpen ? <FaTimes /> : <FaBars />}\r\n        </MenuToggle>\r\n      )}\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nexport const HeaderContainer = styled.header<{ theme?: any }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  background-color: ${({ theme }) => theme?.backgroundColor || '#fff'};\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 1000;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  img {\r\n    height: 50px;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav<{ menuOpen: boolean; theme?: any }>`\r\n  display: flex;\r\n  justify-content: center; /* Ensures links are centered */\r\n  align-items: center;\r\n  flex: 1; /* Takes up available space for proper centering */\r\n  gap: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    display: ${({ menuOpen }) => (menuOpen ? 'flex' : 'none')};\r\n    flex-direction: column;\r\n    position: absolute;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme?.backgroundColor || '#fff'};\r\n    padding: 20px;\r\n    text-align: center;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n    gap: 15px;\r\n  }\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  list-style: none;\r\n  display: flex; /* Use flexbox for flexible alignment */\r\n  justify-content: center; /* Center items */\r\n  align-items: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap; /* Prevent breaking on extra items */\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n\r\n  li {\r\n    a {\r\n      text-decoration: none;\r\n      color: ${({ theme }) => theme?.primaryColor || '#333'};\r\n      font-weight: 500;\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme?.hoverColor || '#007bff'};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LoginLink = styled.button<{ theme?: any }>`\r\n  background: none;\r\n  border: none;\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme?.secondaryColor || '#007bff'};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const MenuToggle = styled.button<{ theme?: any }>`\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  display: none;\r\n  color: ${({ theme }) => theme?.primaryColor || '#333'};\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["Header","_ref","menuLinks","onLoginClick","logoSrc","menuOpen","setMenuOpen","theme","closeMenu","_jsxs","HeaderContainer","children","_jsx","Logo","src","alt","Nav","NavList","map","link","Link","to","url","onClick","label","LoginLink","length","MenuToggle","toggleMenu","FaTimes","FaBars","_c2","$RefreshReg$","styled","withConfig","displayName","componentId","backgroundColor","_ref2","_ref3","_ref4","primaryColor","_ref5","hoverColor","_ref6","secondaryColor","_ref7","module","exports"],"sourceRoot":""}